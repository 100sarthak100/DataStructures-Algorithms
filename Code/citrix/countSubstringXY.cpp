// Given a string str of n lowercase characters, 
// the task is to count the number of substrings of 
// str starting with character X and ending with character Y.

// Examples:

// Input: str = "abbcaceghcak"
//         x = 'a', y = 'c'
// Output: 5
// abbc, abbcac, ac, abbcaceghc, aceghc

// Input: str = "geeksforgeeks"
//         x = 'g', y = 'e'
// Output: 6

#include <bits/stdc++.h>
using namespace std;

int countSub(string s, char x, char y)
{
    int totCount = 0;
    int count_X = 0;
    int n = s.size();
    for(int i=0; i<n; i++)
    {
        if(s[i] == x)
            count_X++;
        else if(s[i] == y)
            totCount += count_X;
    }
    return totCount;
}

int main()
{
    string s = "abbcaceghcak";
    char x = 'a', y = 'c';
    cout<<countSub(s, x, y)<<endl;
}

// print all subsequence, starts with vowel
// end with constants
// using dfs

// Given a string return all possible subsequences which start 
// with vowel and end with consonant. A String is a subsequence 
// of a given String, that is generated by deleting some character 
// of a given string without changing its order.

#include<bits/stdc++.h>
using namespace std;

bool isVowel(char c)
{
    if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')
        return true;
    else
        return false;
}

void dfs(string temp, int i, string s, set<string> &st)
{
    if(i == s.size() && temp.size() > 1 && !isVowel(temp[temp.size()-1]))
    {
        st.insert(temp);
        return;
    }
    
    if(i < s.size())
    {
        dfs(temp+s[i], i+1, s, st);
        dfs(temp, i+1, s, st);
    }
}


int main()
 {
	int t;cin>>t;
	while(t--)
	{
	    string s;
	    cin>>s;
	    int n = s.size();
	    set<string> st;
	    for(int i=0; i<n; i++)
	    {
	        if(isVowel(s[i]))
	        {
	            string temp;
	            temp.push_back(s[i]);
	            dfs(temp, i+1, s, st);
	        }
	    }
	    if(st.size() == 0)
	    {
	       cout<<-1<<endl;
	       continue;
	    }
	    for(auto i : st)
	       cout<<i<<" ";
	        
	    cout<<endl;
	}
	return 0;
}